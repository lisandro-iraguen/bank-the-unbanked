@page "/home"

@using Radzen;

<RadzenStack Gap="1">
    @if (walletState is null)
    {
        <RadzenAlert AlertStyle="AlertStyle.Danger" AllowClose="false" Variant="Variant.Flat" Shade="Shade.Lighter">
            no hay wallet selecionada, hay que conectarse
        </RadzenAlert>
        @if (@isConecting)
        {
            <RadzenProgressBarCircular Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
        }
    }
    <RadzenIcon Icon="account_balance"></RadzenIcon>
    <br />

    @if (walletState is not null)
    {
        @if (@isConecting)
        {
            <RadzenProgressBarCircular Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
        }
        else

        {
            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Wallet Adress</RadzenText>
            <p>Balance Simbolo: @symbol </p>
            <p>Balance Ada: @balanceAda </p>
            <p>Network: @networkType </p>

            <RadzenCard>
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">From:</RadzenText>
                <RadzenTextBox Change=@(args => OnChangeWalletAdress(args, "WalletAdress")) @bind-Value=@walletToTransfer class="w-100" aria-label="Default TextBox" />
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">to:</RadzenText>
                <RadzenTextBox Change=@(args => OnChangeWalletAdress(args, "WalletAdress")) @bind-Value=@walletToTransfer class="w-100" aria-label="Default TextBox" />

                <RadzenNumeric @bind-Value=@valueToTransfer InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" />
                <br />
                <RadzenButton Click=@(args => singTransaction()) Text="enviar" ButtonStyle="ButtonStyle.Primary" />
            </RadzenCard>
        }
    }

</RadzenStack>




