@using Radzen;



<RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" AlignItems="AlignItems.Center">

    @if (_walletConector is null)
    {
        <RadzenProgressBarCircular Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
    }
    else
    {
        if (_walletConector._wallets is not null)
        {
            @foreach (var extension in _walletConector._wallets)
            {
                <RadzenCard>

                    <div style="text-align:center">
                        <img class="wallet-icon" src="@extension.Icon" title="@extension.Name" style="width: 65px; height: 65px;" />
                    </div>
                    <div style="text-align:center">
                        <span class="wallet-name">@extension.Name Wallet</span>
                    </div>
                    <div>
                        @if (extension.Installed)
                        {
                            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="1rem" class="rz-m-1">
                                <RadzenButton Disabled="@Connecting" Click="@(async () => await ConnectWalletAsync(extension.Key))">Connect</RadzenButton>
                            </RadzenStack>
                        }
                        else
                        {
                            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="1rem" class="rz-m-1">
                                <RadzenButton Variant="Variant.Text" class="rz-text-secondary-color" Click="@(async () => await NavigateToNewTab(extension.Url))">Install</RadzenButton>
                            </RadzenStack>
                        }
                    </div>

                </RadzenCard>

            }
        }
    }
</RadzenStack>
